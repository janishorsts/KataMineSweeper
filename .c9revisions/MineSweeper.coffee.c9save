{"ts":1362414656551,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"expect = require('chai').expect\n_ = require 'underscore'\n\n\n# TESTS\n\ndescribe 'Game', ->\n  describe '#display()', ->\n\n    examples = [\n      {input: '.',       output: '0'},\n      {input: '*',       output: '*'},\n      {input: '*.',      output: '*1'}\n      {input: '.*',      output: '1*'},\n      {input: '*.*',     output: '*2*'},\n      {input: '.*.',     output: '1*1'},\n      {input: '..*.*..', output: '01*2*10'},\n\n      {input: \"*\\n.\",    output: \"*\\n1\"}\n      {input: \".\\n*\",    output: \"1\\n*\"}\n      {input: \".*\\n.*\",    output: \"2*\\n2*\"}\n    ]\n\n    _.each examples, (example) ->\n      it \"should display '#{example.output}' when input is '#{example.input}'\", ->\n        game = new Game input: example.input\n        expect(game.display()).to.equal example.output\n\ndescribe 'MineSweeper', ->\n  mineSweeper = {}\n\n  before ->\n    mineSweeper = new MineSweeper\n\n  describe '#run()', ->\n    it 'should end when input reaches 0 0', ->\n      mineSweeper.input('0 0');\n      expect(mineSweeper.run()).to.equal ''\n\n\n# CODE\n\nclass MineSweeper\n  input: ->\n  run: ->\n    ''\n\nclass Game\n  constructor: (@options) ->\n  display: ->\n    lines = @options.input.split('\\n')\n\n    _.each lines, (line, idy) ->\n      lines[idy] = line.replace(/\\./g, '0').split('')\n\n    _.each lines, (line, lineIndex) ->\n      _.each line, (square, idx) ->\n        return if lines[lineIndex][idx] == '*'\n\n        lines[lineIndex][idx]++ if lines[lineIndex][idx - 1] is '*'\n        lines[lineIndex][idx]++ if lines[lineIndex][idx + 1] is '*'\n\n        lines[lineIndex][idx]++ if lines[lineIndex + 1]?[idx] is '*'\n        lines[lineIndex][idx]++ if lines[lineIndex - 1]?[idx] is '*'\n\n    return lines.join('\\n').replace(/\\,/g, '')"]],"start1":0,"start2":0,"length1":0,"length2":1697}]],"length":1697}
{"contributors":[],"silentsave":false,"ts":1362416577795,"patch":[[{"diffs":[[0," require"],[-1," "],[1,"("],[0,"'undersc"]],"start1":35,"start2":35,"length1":17,"length2":17},{"diffs":[[0,"erscore'"],[1,")"],[0,"\n\n\n# TES"]],"start1":48,"start2":48,"length1":16,"length2":17},{"diffs":[[0,"\n\n# CODE"],[-1,"\n"],[1," "],[0,"\nclass M"]],"start1":1013,"start2":1013,"length1":17,"length2":17},{"diffs":[[0,"line, id"],[-1,"y"],[1,"x"],[0,") ->\n   "]],"start1":1184,"start2":1184,"length1":17,"length2":17},{"diffs":[[0,"lines[id"],[-1,"y"],[1,"x"],[0,"] = line"]],"start1":1204,"start2":1204,"length1":17,"length2":17},{"diffs":[[0,"e, lineI"],[-1,"nde"],[1,"d"],[0,"x) ->\n  "]],"start1":1275,"start2":1275,"length1":19,"length2":17},{"diffs":[[0,"square, "],[-1,"i"],[1,"squareI"],[0,"dx) ->\n "]],"start1":1310,"start2":1310,"length1":17,"length2":23},{"diffs":[[0,"es[lineI"],[-1,"ndex][i"],[1,"dx][squareI"],[0,"dx] == '"]],"start1":1353,"start2":1353,"length1":23,"length2":27},{"diffs":[[0,"     lines[lineI"],[-1,"nde"],[1,"d"],[0,"x][idx]++ if lin"]],"start1":1387,"start2":1387,"length1":35,"length2":33},{"diffs":[[0,"es[lineI"],[-1,"ndex][i"],[1,"dx][squareI"],[0,"dx - 1] "]],"start1":1420,"start2":1420,"length1":23,"length2":27},{"diffs":[[0,"     lines[lineI"],[-1,"nde"],[1,"d"],[0,"x][idx]++ if lin"]],"start1":1457,"start2":1457,"length1":35,"length2":33},{"diffs":[[0,"es[lineI"],[-1,"ndex][i"],[1,"dx][squareI"],[0,"dx + 1] "]],"start1":1490,"start2":1490,"length1":23,"length2":27},{"diffs":[[0,"ineI"],[-1,"ndex][idx]++ if lines[lineIndex + 1]?[idx"],[1,"dx][idx]++ if lines[lineIdx + 1]?[squareIdx] is '*'\n        lines[lineIdx][idx]++ if lines[lineIdx - 1]?[squareIdx] is '*'\n\n        lines[lineIdx][idx]++ if lines[lineIdx + 1]?[squareIdx + 1"],[0,"] is"]],"start1":1540,"start2":1540,"length1":49,"length2":198},{"diffs":[[0,"es[lineI"],[-1,"nde"],[1,"d"],[0,"x][idx]+"]],"start1":1754,"start2":1754,"length1":19,"length2":17},{"diffs":[[0,"ineI"],[-1,"nde"],[1,"d"],[0,"x - 1]?["],[-1,"idx"],[1,"squareIdx + 1"],[0,"] is"]],"start1":1783,"start2":1783,"length1":22,"length2":30},{"diffs":[[0,"+ 1] is '*'\n"],[1,"        "],[0,"\n    return "]],"start1":1806,"start2":1806,"length1":24,"length2":32}]],"length":1873,"saved":false}
{"ts":1362417044933,"patch":[[{"diffs":[[0,"turn if line"],[-1,"s[lineIdx]"],[0,"[squareIdx] "]],"start1":1342,"start2":1342,"length1":34,"length2":24},{"diffs":[[0,"        line"],[-1,"s[lineIdx]"],[0,"[idx]++ if l"]],"start1":1374,"start2":1374,"length1":34,"length2":24},{"diffs":[[0,"x]++ if line"],[-1,"s[lineIdx]"],[0,"[squareIdx -"]],"start1":1389,"start2":1389,"length1":34,"length2":24},{"diffs":[[0,"        line"],[-1,"s[lineIdx]"],[0,"[idx]++ if l"]],"start1":1424,"start2":1424,"length1":34,"length2":24},{"diffs":[[0," if line"],[-1,"s[lineIdx]"],[0,"[squareI"]],"start1":1443,"start2":1443,"length1":26,"length2":16},{"diffs":[[0,"        line"],[-1,"s[lineIdx]"],[0,"[idx]++ if l"]],"start1":1475,"start2":1475,"length1":34,"length2":24},{"diffs":[[0,"        line"],[-1,"s[lineIdx]"],[0,"[idx]++ if l"]],"start1":1536,"start2":1536,"length1":34,"length2":24},{"diffs":[[0,"        line"],[-1,"s[lineIdx]"],[0,"[idx]++ if l"]],"start1":1598,"start2":1598,"length1":34,"length2":24},{"diffs":[[0,"line"],[-1,"s[lineIdx]"],[0,"[idx"]],"start1":1671,"start2":1671,"length1":18,"length2":8}]],"length":1783,"saved":false}
{"ts":1362417117605,"patch":[[{"diffs":[[0,"plit('')"],[1,"\n      console.log lines[idx]"],[0,"\n\n    _."]],"start1":1243,"start2":1243,"length1":16,"length2":45}]],"length":1812,"saved":false}
{"ts":1362417177637,"patch":[[{"diffs":[[0,"('')"],[-1,"\n      console.log lines[idx]"],[0,"\n\n  "]],"start1":1247,"start2":1247,"length1":37,"length2":8},{"diffs":[[0,"uareIdx) ->\n"],[1,"        console.log lineIdx + ' ' + squareIdx\n"],[0,"        retu"]],"start1":1320,"start2":1320,"length1":24,"length2":70}]],"length":1829,"saved":false}
{"ts":1362417298161,"patch":[[{"diffs":[[0," ->\n"],[-1,"        console.log lineIdx + ' ' + squareIdx\n"],[0,"    "]],"start1":1328,"start2":1328,"length1":54,"length2":8},{"diffs":[[0,"'\n\n        line["],[-1,"i"],[1,"squareI"],[0,"dx]++ if line[sq"]],"start1":1371,"start2":1371,"length1":33,"length2":39},{"diffs":[[0,"*'\n        line["],[-1,"i"],[1,"suqareI"],[0,"dx]++ if line[sq"]],"start1":1427,"start2":1427,"length1":33,"length2":39},{"diffs":[[0,"'\n\n        line["],[-1,"i"],[1,"squareI"],[0,"dx]++ if lines[l"]],"start1":1484,"start2":1484,"length1":33,"length2":39},{"diffs":[[0,"*'\n        line["],[-1,"i"],[1,"squareI"],[0,"dx]++ if lines[l"]],"start1":1551,"start2":1551,"length1":33,"length2":39},{"diffs":[[0,"'\n\n        line["],[-1,"i"],[1,"squareI"],[0,"dx]++ if lines[l"]],"start1":1619,"start2":1619,"length1":33,"length2":39},{"diffs":[[0,"   line["],[-1,"i"],[1,"squareI"],[0,"dx]++ if"]],"start1":1698,"start2":1698,"length1":17,"length2":23}]],"length":1819,"saved":false}
{"ts":1362417311230,"patch":[[{"diffs":[[0,"ne[s"],[-1,"u"],[0,"q"],[1,"u"],[0,"areI"]],"start1":1440,"start2":1440,"length1":10,"length2":10}]],"length":1819,"saved":false}
{"ts":1362417396405,"patch":[[{"diffs":[[0,"ut: '0'}"],[-1,","],[0,"\n      {"]],"start1":164,"start2":164,"length1":17,"length2":16},{"diffs":[[0,"ut: '*'}"],[-1,","],[0,"\n      {"]],"start1":202,"start2":202,"length1":17,"length2":16},{"diffs":[[0,"t: '1*'}"],[-1,","],[0,"\n      {"]],"start1":280,"start2":280,"length1":17,"length2":16},{"diffs":[[0,": '*2*'}"],[-1,","],[0,"\n      {"]],"start1":320,"start2":320,"length1":17,"length2":16},{"diffs":[[0,": '1*1'}"],[-1,","],[0,"\n      {"]],"start1":360,"start2":360,"length1":17,"length2":16},{"diffs":[[0,"1*2*10'}"],[-1,","],[0,"\n\n      "]],"start1":404,"start2":404,"length1":17,"length2":16},{"diffs":[[0,".*\\n.*\","],[-1,"  "],[0,"  output"]],"start1":511,"start2":511,"length1":18,"length2":16},{"diffs":[[0,": \"2*\\n2*\"}\n"],[1,"      {input: \"*.\\n*.\",  output: \"*2\\n2*\"}\n"],[0,"    ]\n\n    _"]],"start1":527,"start2":527,"length1":24,"length2":67}]],"length":1854,"saved":false}
{"ts":1362417430710,"patch":[[{"diffs":[[0,"t: \"*2\\n"],[-1,"2"],[0,"*"],[1,"2"],[0,"\"}\n    ]"]],"start1":569,"start2":569,"length1":18,"length2":18}]],"length":1854,"saved":false}
{"ts":1362417447171,"patch":[[{"diffs":[[0,"t: \"*.\\n"],[-1,"*"],[1,"."],[0,".\",  out"]],"start1":550,"start2":550,"length1":17,"length2":17},{"diffs":[[0,": \"*"],[-1,"2\\n*2"],[1,"1\\n11"],[0,"\"}\n "]],"start1":570,"start2":570,"length1":13,"length2":13}]],"length":1854,"saved":false}
{"ts":1362417625932,"patch":[[{"diffs":[[0,"output\n\n"],[1,"\n"],[0,"describe"]],"start1":799,"start2":799,"length1":16,"length2":17}]],"length":1855,"saved":false}
{"contributors":[],"silentsave":false,"ts":1362417692885,"patch":[[{"diffs":[[0,"output\n\n"],[-1,"\n"],[0,"describe"]],"start1":799,"start2":799,"length1":17,"length2":16}]],"length":1854,"saved":false}
{"ts":1362417719813,"patch":[[{"diffs":[[0,"# CODE \n"],[1,"\n"],[0,"class Mi"]],"start1":1050,"start2":1050,"length1":16,"length2":17}]],"length":1855,"saved":false}
{"contributors":[],"silentsave":false,"ts":1362419658122,"patch":[[{"diffs":[[0,": \"*1\\n11\"}\n"],[1,"      {input: \"*.\\n..\\n.*\",  output: \"*1\\n22\\n1*\"}\n      {input: \"*...\\n....\\n.*..\\n....\", output: \"*100\\n2210\\n1*10\\n1110\"}\n      {input: \"**...\\n.....\\n.*...\", output: \"**100\\n33200\\n1*100\"}\n"],[0,"    ]\n\n    _"]],"start1":570,"start2":570,"length1":24,"length2":217},{"diffs":[[0,"       \n"],[1,"        line[squareIdx]++ if lines[lineIdx + 1]?[squareIdx - 1] is '*'\n        line[squareIdx]++ if lines[lineIdx - 1]?[squareIdx - 1] is '*'\n        \n"],[0,"    retu"]],"start1":1994,"start2":1994,"length1":16,"length2":167}]],"length":2199,"saved":false}
{"ts":1362427441003,"patch":[[{"diffs":[[0,": \"*1\\n11\"}\n"],[1,"      {input: \"*.\\n..\\n.*\",  output: \"*1\\n22\\n1*\"}\n      {input: \"*...\\n....\\n.*..\\n....\", output: \"*100\\n2210\\n1*10\\n1110\"}\n\n"],[0,"    ]\n\n    _"]],"start1":570,"start2":570,"length1":24,"length2":150},{"diffs":[[0,"       \n"],[1,"        line[squareIdx]++ if lines[lineIdx + 1]?[squareIdx - 1] is '*'\n        line[squareIdx]++ if lines[lineIdx - 1]?[squareIdx - 1] is '*'\n        \n"],[0,"    retu"]],"start1":1927,"start2":1927,"length1":16,"length2":167}]],"length":2132,"saved":false}
{"ts":1362466012837,"patch":[[{"diffs":[[0,"\\n1110\"}"],[1,"\n      {input: \"**...\\n.....\\n.*...\", output: \"**100\\n33200\\n1*100\"}"],[0,"\n\n    ]\n"]],"start1":698,"start2":698,"length1":16,"length2":84}]],"length":2200,"saved":false}
{"ts":1362466116173,"patch":[[{"diffs":[[0,": \"1\\n*\"}\n      "],[1,"\n      {input: \"*.\\n..\",    output: \"*1\\11\"}\n      {input: \".*\\n..\",    output: \"1*\\n11\"}\n      {input: \"..\\n*.\",    output: \"1.\\n*.\"}\n      {input: \"..\\n.*\",    output: \"11\\n.*\"}\n      \n      # "],[0,"{input: \".*\\n.*\""]],"start1":486,"start2":486,"length1":32,"length2":227},{"diffs":[[0," \"2*\\n2*\"}\n     "],[1," #"],[0," {input: \"*.\\n.."]],"start1":723,"start2":723,"length1":32,"length2":34},{"diffs":[[0," \"*1\\n11\"}\n     "],[1," #"],[0," {input: \"*.\\n.."]],"start1":768,"start2":768,"length1":32,"length2":34}]],"length":2399,"saved":false}
{"ts":1362466132636,"patch":[[{"diffs":[[0,"1\\n22\\n1*\"}\n"],[1,"      \n"],[0,"      {input"]],"start1":820,"start2":820,"length1":24,"length2":31}]],"length":2406,"saved":false}
{"ts":1362466159920,"patch":[[{"diffs":[[0,"ut: \"*1\\"],[1,"n"],[0,"11\"}\n   "]],"start1":534,"start2":534,"length1":16,"length2":17}]],"length":2407,"saved":false}
{"ts":1362466230638,"patch":[[{"diffs":[[0,"tput: \"1"],[-1,".\\n*."],[1,"1\\n*1"],[0,"\"}\n     "]],"start1":622,"start2":622,"length1":21,"length2":21},{"diffs":[[0,"t: \"11\\n"],[-1,"."],[1,"1"],[0,"*\"}\n    "]],"start1":670,"start2":670,"length1":17,"length2":17}]],"length":2407,"saved":false}
{"ts":1362466331221,"patch":[[{"diffs":[[0,"t: \"*.\\n..\","],[-1,"  "],[0,"  output: \"*"]],"start1":514,"start2":514,"length1":26,"length2":24},{"diffs":[[0,".*\\n..\","],[-1,"  "],[0,"  output"]],"start1":561,"start2":561,"length1":18,"length2":16},{"diffs":[[0,"..\\n*.\","],[-1,"  "],[0,"  output"]],"start1":604,"start2":604,"length1":18,"length2":16},{"diffs":[[0,"..\\n.*\","],[-1,"  "],[0,"  output"]],"start1":647,"start2":647,"length1":18,"length2":16}]],"length":2399,"saved":false}
{"ts":1362472398822,"patch":[[{"diffs":[[0,"...\\n.*...\","],[1,"   "],[0," output: \"**"]],"start1":930,"start2":930,"length1":24,"length2":27}]],"length":2402,"saved":false}
{"ts":1362480272053,"patch":[[{"diffs":[[0,"      \n     "],[-1," #"],[0," {input: \".*"]],"start1":675,"start2":675,"length1":26,"length2":24},{"diffs":[[0,"input: \""],[-1,".*\\n."],[1,"**\\n..\",  output: \"**\\n22\"}\n      {input: \"..\\n*"],[0,"*\",  out"]],"start1":689,"start2":689,"length1":21,"length2":64},{"diffs":[[0,"tput: \"2"],[-1,"*\\n2"],[1,"2\\n*"],[0,"*\"}\n    "]],"start1":752,"start2":752,"length1":20,"length2":20},{"diffs":[[0," \"22\\n**\"}\n     "],[-1," #"],[0," {input: \"*.\\n.."]],"start1":757,"start2":757,"length1":34,"length2":32},{"diffs":[[0,"   {input: \"*.\\n"],[-1,"."],[1,"*"],[0,".\",  output: \"*1"]],"start1":771,"start2":771,"length1":33,"length2":33},{"diffs":[[0,": \"*"],[-1,"1\\n11"],[1,"2\\n*2"],[0,"\"}\n     "],[-1," #"],[0," {in"]],"start1":799,"start2":799,"length1":23,"length2":21},{"diffs":[[0,"input: \""],[-1,"*.\\n."],[1,".*\\n.*\",  output: \"2*\\n2*\"}\n      {input: \"*"],[0,".\\n.*\", "]],"start1":818,"start2":818,"length1":21,"length2":60},{"diffs":[[0,": \"*"],[-1,"1\\n22\\n1*"],[1,"2\\n2*\"}\n      {input: \".*\\n*.\",  output: \"2*\\n*2"],[0,"\"}\n "]],"start1":885,"start2":885,"length1":17,"length2":56}]],"length":2517,"saved":false}
{"ts":1362482281363,"patch":[[{"diffs":[[0,"ons) ->\n"],[1,"      @grid = @parse(@options.input)\n  parse: (input) ->\n      result = []\n      _.each @options.input.split('\\n'), (line) ->\n        result.push line.replace(/\\./g, '0').split('')\n      result\n"],[0,"  displa"]],"start1":1650,"start2":1650,"length1":16,"length2":210}]],"length":2711,"saved":false}
{"ts":1362482309607,"patch":[[{"diffs":[[0,"    "],[-1,"lines = @options.input.split('\\n')\n\n    _.each lines, (line, idx) ->\n      lines[idx] = line.replace(/\\./g, '0').split('')\n\n    _.each lines"],[1,"_.each @grid"],[0,", (l"]],"start1":1866,"start2":1866,"length1":148,"length2":20}]],"length":2583,"saved":false}
{"ts":1362482448217,"patch":[[{"diffs":[[0," return "],[-1,"lines"],[1,"@grid"],[0,".join('\\"]],"start1":2540,"start2":2540,"length1":21,"length2":21}]],"length":2583,"saved":false}
{"ts":1362482479861,"patch":[[{"diffs":[[0,"= @parse"],[-1,"("],[1," "],[0,"@options"]],"start1":1670,"start2":1670,"length1":17,"length2":17},{"diffs":[[0,"ns.input"],[-1,")"],[0,"\n  parse"]],"start1":1685,"start2":1685,"length1":17,"length2":16},{"diffs":[[0,"plit"],[-1,"("],[1," "],[0,"''"],[-1,")"],[0,"\n   "]],"start1":1829,"start2":1829,"length1":12,"length2":11}]],"length":2581,"saved":false}
{"ts":1362482514251,"patch":[[{"diffs":[[0,"squareIdx]++ if "],[-1,"lines"],[1,"@grid"],[0,"[lineIdx + 1]?[s"]],"start1":2111,"start2":2111,"length1":37,"length2":37},{"diffs":[[0,"squareIdx]++ if "],[-1,"lines"],[1,"@grid"],[0,"[lineIdx - 1]?[s"]],"start1":2178,"start2":2178,"length1":37,"length2":37},{"diffs":[[0,"squareIdx]++ if "],[-1,"lines"],[1,"@grid"],[0,"[lineIdx + 1]?[s"]],"start1":2246,"start2":2246,"length1":37,"length2":37},{"diffs":[[0,"squareIdx]++ if "],[-1,"lines"],[1,"@grid"],[0,"[lineIdx - 1]?[s"]],"start1":2317,"start2":2317,"length1":37,"length2":37},{"diffs":[[0,"squareIdx]++ if "],[-1,"lines"],[1,"@grid"],[0,"[lineIdx + 1]?[s"]],"start1":2397,"start2":2397,"length1":37,"length2":37},{"diffs":[[0," if "],[-1,"lines"],[1,"@grid"],[0,"[lin"]],"start1":2480,"start2":2480,"length1":13,"length2":13}]],"length":2581,"saved":false}
{"ts":1362482534979,"patch":[[{"diffs":[[0,"e, lineIdx) "],[-1,"-"],[1,"="],[0,">\n      _.ea"]],"start1":1886,"start2":1886,"length1":25,"length2":25},{"diffs":[[0,"areIdx) "],[-1,"-"],[1,"="],[0,">\n      "]],"start1":1932,"start2":1932,"length1":17,"length2":17}]],"length":2581,"saved":false}
{"ts":1362482877700,"patch":[[{"diffs":[[0,"*'\n        \n"],[1,"        # for y in [lineIdx - 1..lineIdx + 1]\n        #    for x in [squareIdx - 1..squareIdx + 1]\n        #        line[squareIdx]++ if @grid[x]?[y] is '*'\n"],[0,"    return @"]],"start1":2523,"start2":2523,"length1":24,"length2":181}]],"length":2738,"saved":false}
{"ts":1362483253054,"patch":[[{"diffs":[[0,"dx] == '*'\n\n"],[1,"        ###\n"],[0,"        line"]],"start1":1973,"start2":1973,"length1":24,"length2":36},{"diffs":[[0," is '*'\n        "],[1,"###"],[0,"\n        # for y"]],"start1":2530,"start2":2530,"length1":32,"length2":35},{"diffs":[[0,"        "],[-1,"#"],[1,"\n       "],[0," for y i"]],"start1":2550,"start2":2550,"length1":17,"length2":24},{"diffs":[[0,"eIdx - 1"],[-1,".."],[1,", lineIdx, "],[0,"lineIdx "]],"start1":2580,"start2":2580,"length1":18,"length2":27},{"diffs":[[0,"+ 1]\n       "],[-1," #"],[0,"    for x in"]],"start1":2607,"start2":2607,"length1":26,"length2":24},{"diffs":[[0,"eIdx - 1"],[-1,".."],[1,", squareIdx, "],[0,"squareId"]],"start1":2638,"start2":2638,"length1":18,"length2":29},{"diffs":[[0,"]\n      "],[-1,"  #"],[0,"        "]],"start1":2672,"start2":2672,"length1":19,"length2":16}]],"length":2775,"saved":false}
{"ts":1362483377378,"patch":[[{"diffs":[[0,"rid["],[-1,"x]?[y"],[1,"y]?[x"],[0,"] is"]],"start1":2711,"start2":2711,"length1":13,"length2":13}]],"length":2775,"saved":false}
{"ts":1362483582128,"patch":[[{"diffs":[[0," '*'"],[-1,"\n\n        ###"],[0,"\n   "]],"start1":1979,"start2":1979,"length1":21,"length2":8},{"diffs":[[0,"Idx]"],[-1,"++ if line[squareIdx - 1] is '*'\n        line[squareIdx]++ if line[squareIdx + 1] is '*'\n\n        line[squareIdx]++ if @grid[lineIdx + 1]?[squareIdx] is '*'\n        line[squareIdx]++ if @grid[lineIdx - 1]?[squareIdx] is '*'\n\n        line[squareIdx]++ if @grid[lineIdx + 1]?[squareIdx + 1] is '*'\n        line[squareIdx]++ if @grid[lineIdx - 1]?[squareIdx + 1] is '*'\n        \n        line[squareIdx]++ if @grid[lineIdx + 1]?[squareIdx - 1] is '*'\n        line[squareIdx]++ if @grid[lineIdx - 1]?[squareIdx - 1] is '*'\n        ###\n        "],[1," = @countMines lineIdx, squareIdx\n    countMines: (lineIdx, squareIdx) ->\n        result = 0"],[0,"\n   "]],"start1":2003,"start2":2003,"length1":546,"length2":100},{"diffs":[[0,"        "],[-1,"line[squareIdx]"],[1,"result"],[0,"++ if @g"]],"start1":2221,"start2":2221,"length1":31,"length2":22},{"diffs":[[0,"?[x] is '*'\n"],[1,"        result\n"],[0,"    return @"]],"start1":2249,"start2":2249,"length1":24,"length2":39}]],"length":2322,"saved":false}
{"ts":1362483718864,"patch":[[{"diffs":[[0,"ss Game\n"],[1,"  "],[0,"  constr"]],"start1":1621,"start2":1621,"length1":16,"length2":18},{"diffs":[[0,"options) ->\n"],[1,"  "],[0,"      @grid "]],"start1":1648,"start2":1648,"length1":24,"length2":26},{"diffs":[[0,"input\n  "],[1," "],[1," "],[0,"parse: ("]],"start1":1692,"start2":1692,"length1":16,"length2":18},{"diffs":[[0,"t) ->\n      "],[1,"  "],[0,"result = []\n"]],"start1":1714,"start2":1714,"length1":24,"length2":26},{"diffs":[[0," = []\n      "],[1," "],[1," "],[0,"_.each @opti"]],"start1":1734,"start2":1734,"length1":24,"length2":26},{"diffs":[[0,", (line) ->\n"],[1,"    "],[0,"        resu"]],"start1":1781,"start2":1781,"length1":24,"length2":28},{"diffs":[[0,"'\n      "],[1,"  "],[0,"result\n"],[1,"  "],[0,"  displa"]],"start1":1849,"start2":1849,"length1":23,"length2":27},{"diffs":[[0,"display: ->\n"],[1,"    "],[0,"    _.each @"]],"start1":1870,"start2":1870,"length1":24,"length2":28},{"diffs":[[0,"x) =>\n      "],[1,"     "],[1," "],[0,"_.each line,"]],"start1":1917,"start2":1917,"length1":24,"length2":30},{"diffs":[[0," =>\n        "],[1,"    "],[0,"return if li"]],"start1":1967,"start2":1967,"length1":24,"length2":28},{"diffs":[[0,"Idx] == '*'\n"],[1,"    "],[0,"        line"]],"start1":2004,"start2":2004,"length1":24,"length2":28}]],"length":2358,"saved":false}
{"ts":1362483820298,"patch":[[{"diffs":[[0,"ss Game\n"],[-1,"  "],[0,"  constr"]],"start1":1621,"start2":1621,"length1":18,"length2":16},{"diffs":[[0," ->\n    "],[-1,"   "],[-1," "],[0,"@grid = "]],"start1":1654,"start2":1654,"length1":20,"length2":16},{"diffs":[[0,"s.input\n"],[-1,"  "],[0,"  parse:"]],"start1":1684,"start2":1684,"length1":18,"length2":16},{"diffs":[[0," (input) ->\n    "],[-1," "],[-1,"   "],[0,"result = []\n    "]],"start1":1700,"start2":1700,"length1":36,"length2":32},{"diffs":[[0,"lt = []\n"],[-1,"    "],[0,"    _.ea"]],"start1":1720,"start2":1720,"length1":20,"length2":16},{"diffs":[[0,"e) ->\n      "],[-1," "],[-1,"     "],[0,"result.push "]],"start1":1771,"start2":1771,"length1":30,"length2":24},{"diffs":[[0,".split ''\n      "],[-1,"  "],[0,"result\n    displ"]],"start1":1819,"start2":1819,"length1":34,"length2":32},{"diffs":[[0,"esult\n  "],[-1," "],[-1," "],[0,"display:"]],"start1":1836,"start2":1836,"length1":18,"length2":16},{"diffs":[[0,"display: ->\n"],[-1,"    "],[0,"    _.each @"]],"start1":1844,"start2":1844,"length1":28,"length2":24},{"diffs":[[0,"\n       "],[-1,"   "],[-1,"  "],[0,"_.each l"]],"start1":1892,"start2":1892,"length1":21,"length2":16},{"diffs":[[0,"uareIdx) =>\n"],[-1,"   "],[0,"         ret"]],"start1":1924,"start2":1924,"length1":27,"length2":24},{"diffs":[[0,"        "],[-1,"   "],[0,"line[squ"]],"start1":1979,"start2":1979,"length1":19,"length2":16},{"diffs":[[0,"reIdx\n  "],[-1," "],[-1," "],[0,"countMin"]],"start1":2030,"start2":2030,"length1":18,"length2":16},{"diffs":[[0,"uareIdx) ->\n"],[-1,"    "],[0,"    result ="]],"start1":2062,"start2":2062,"length1":28,"length2":24},{"diffs":[[0,"ult = 0\n    "],[-1,"   "],[-1," "],[0,"for y in [li"]],"start1":2081,"start2":2081,"length1":28,"length2":24},{"diffs":[[0,"ineIdx + 1]\n"],[-1,"     "],[0,"      for x "]],"start1":2126,"start2":2126,"length1":29,"length2":24},{"diffs":[[0,"        "],[-1,"  "],[-1,"    "],[0,"result++"]],"start1":2195,"start2":2195,"length1":22,"length2":16},{"diffs":[[0,"?[x] is '*'\n"],[-1,"    "],[0,"    result\n "]],"start1":2223,"start2":2223,"length1":28,"length2":24}]],"length":2292,"saved":false}
{"ts":1362483840646,"patch":[[{"diffs":[[0," result\n"],[1,"  display: ->\n"],[0,"    retu"]],"start1":2238,"start2":2238,"length1":16,"length2":30}]],"length":2306,"saved":false}
{"ts":1362483878637,"patch":[[{"diffs":[[0,"uareIdx\n"],[1,"    return @grid.join('\\n').replace(/\\,/g, '')\n"],[0,"  countM"]],"start1":2028,"start2":2028,"length1":16,"length2":63}]],"length":2353,"saved":false}
{"ts":1362483882737,"patch":[[{"diffs":[[0,"uareIdx\n    "],[-1,"return "],[0,"@grid.join('"]],"start1":2028,"start2":2028,"length1":31,"length2":24}]],"length":2346,"saved":false}
{"ts":1362483892458,"patch":[[{"diffs":[[0,"sult"],[-1,"\n  display: ->\n    return @grid.join('\\n').replace(/\\,/g, '')"]],"start1":2281,"start2":2281,"length1":65,"length2":4}]],"length":2285,"saved":false}
{"ts":1362483923819,"patch":[[{"diffs":[[0,"ult = 0\n"],[1,"    grid = @grid\n"],[0,"    for "]],"start1":2121,"start2":2121,"length1":16,"length2":33},{"diffs":[[0,"lt++ if "],[-1,"@"],[0,"grid[y]?"]],"start1":2264,"start2":2264,"length1":17,"length2":16}]],"length":2301,"saved":false}
{"ts":1362483961974,"patch":[[{"diffs":[[0,"= 0\n"],[-1,"    grid = @grid\n"],[0,"    "]],"start1":2125,"start2":2125,"length1":25,"length2":8},{"diffs":[[0,"lt++ if "],[1,"@"],[0,"grid[y]?"]],"start1":2247,"start2":2247,"length1":16,"length2":17}]],"length":2285,"saved":false}
{"contributors":[],"silentsave":false,"ts":1362484365048,"patch":[[{"diffs":[[0,"    "],[-1,"  {input: \"*.\\n..\\n.*\",  output: \"*1\\n22\\n1*\"}\n      {input: \"*...\\n....\\n.*..\\n....\", output: \"*100\\n2210\\n1*10\\n1110\"}\n      {input: \"**...\\n.....\\n.*...\", output: \"**100\\n33200\\n1*100\"}\n    "],[1,""],[0,"]\n\n "]],"start1":1093,"start2":1093,"length1":201,"length2":8},{"diffs":[[0,"= []"],[-1," = @countMines lineIdx, squareIdx\n   ce(/\\,/g, '')\n  countMines: (lineIdx, squareIdx) ->\n    result = 0"],[0,"\n   "]],"start1":1723,"start2":1723,"length1":111,"length2":8},{"diffs":[[0,"ne.repla"],[1,"ce(/\\./g, '0')"],[0,".split '"]],"start1":1797,"start2":1797,"length1":16,"length2":30},{"diffs":[[0,"sult"],[-1,"display: ->\n        lines = @options.input.split('\\n')\n\n    _.each lines, (line, idx) ->\n    _.each @grid  lines[idx] = line.replace(/\\./g, '0').split('')\n\n    _.each lines"],[1,"\n  display: ->\n    _.each @grid"],[0,", (l"]],"start1":1837,"start2":1837,"length1":180,"length2":39},{"diffs":[[0,"lineIdx) =>\n"],[-1,"     "],[0,"       _.eac"]],"start1":1881,"start2":1881,"length1":29,"length2":24},{"diffs":[[0,"        "],[-1,"   "],[0,"return i"]],"start1":1937,"start2":1937,"length1":19,"length2":16},{"diffs":[[0," == '*'\n        "],[1," "],[0,"line[squareIdx] "]],"start1":1970,"start2":1970,"length1":32,"length2":33},{"diffs":[[0,"dx] "],[-1,"     for y in [lineIdx - 1, lineIdx, lineIdx + 1]\n      for x in [squareIdx - 1, squareIdx, squareIdx + 1]\n        #  result++ if @grid[y]?[x] is '*'\n    result\n        line[squareIdx]++ if lines[lineIdx + 1]?[squar"],[1,"= 0 #@countMines lineIdx, squareIdx\n    @grid.join('\\n').replace(/\\,/g, '')\n  countMines: (lineIdx, squareIdx) ->\n    result = 0\n    for y in [lineIdx - 1, lineIdx, lin"],[0,"eIdx "],[-1,"- 1] is '*'\n        line[squareIdx]++ if lines[lineIdx - 1]?[squareIdx - 1] is '*'\n        \n        line[squareIdx]++ if lines[lineIdx + 1]?["],[1,"+ 1]\n      for x in [squareIdx - 1, squareIdx, "],[0,"squa"]],"start1":1999,"start2":1999,"length1":369,"length2":228},{"diffs":[[0,", squareIdx "],[-1,"-"],[1,"+"],[0," 1]"],[-1," is '*'"],[0,"\n        lin"]],"start1":2221,"start2":2221,"length1":35,"length2":28},{"diffs":[[0,"    "],[-1,"line[squareIdx]++ if lines[lineIdx - 1]?[squareIdx - 1] is '*'\n        \n    return @grid.join('\\n').replace(/\\,/g, '')"],[1,"result++ if @grid[y]?[x] is '*'\n    result"]],"start1":2242,"start2":2242,"length1":122,"length2":46}]],"length":2288,"saved":false}
{"ts":1362484457947,"patch":[[{"diffs":[[0,"] = "],[-1,"0 #"],[0,"@cou"]],"start1":2001,"start2":2001,"length1":11,"length2":8}]],"length":2285,"saved":false}
{"ts":1362484470274,"patch":[[{"diffs":[[0,"        "],[1," #"],[0," line[sq"]],"start1":1978,"start2":1978,"length1":16,"length2":18}]],"length":2287,"saved":false}
{"ts":1362484493393,"patch":[[{"diffs":[[0,"plit ''\n    "],[-1,"  "],[0,"result\n  dis"]],"start1":1821,"start2":1821,"length1":26,"length2":24}]],"length":2285,"saved":false}
{"ts":1362484503611,"patch":[[{"diffs":[[0,"    "],[-1," #"],[0," lin"]],"start1":1980,"start2":1980,"length1":10,"length2":8}]],"length":2283,"saved":false}
{"ts":1362484552798,"patch":[[{"diffs":[[0,"    "],[-1,"return "],[0,"if l"]],"start1":1939,"start2":1939,"length1":15,"length2":8},{"diffs":[[0,"dx] "],[-1,"="],[1,"!"],[0,"= '*'\n"],[1,"  "],[0,"    "]],"start1":1958,"start2":1958,"length1":15,"length2":17}]],"length":2278,"saved":false}
{"ts":1362484569329,"patch":[[{"diffs":[[0," =>\n"],[-1,"         if line[squareIdx] != '*'\n  "],[0,"    "]],"start1":1930,"start2":1930,"length1":45,"length2":8},{"diffs":[[0,"quareIdx"],[1," if line[squareIdx] != '*'"],[0,"\n    @gr"]],"start1":1983,"start2":1983,"length1":16,"length2":42}]],"length":2267,"saved":false}
{"ts":1362484598692,"patch":[[{"diffs":[[0,"untMines"],[-1," "],[1,"("],[0,"lineIdx,"]],"start1":1964,"start2":1964,"length1":17,"length2":17},{"diffs":[[0,"quareIdx"],[1,")"],[0," if line"]],"start1":1983,"start2":1983,"length1":16,"length2":17}]],"length":2268,"saved":false}
{"ts":1362484833160,"patch":[[{"diffs":[[0,"'\\n'), ("],[-1,"line"],[1,"row"],[0,") ->\n   "]],"start1":1760,"start2":1760,"length1":20,"length2":19}]],"length":2267,"saved":false}
{"ts":1362484836865,"patch":[[{"diffs":[[0,"lt.push "],[-1,"line"],[1,"row"],[0,".replace"]],"start1":1786,"start2":1786,"length1":20,"length2":19}]],"length":2266,"saved":false}
{"ts":1362484917650,"patch":[[{"diffs":[[0,"d, ("],[-1,"line, line"],[1,"row, row"],[0,"Idx)"]],"start1":1867,"start2":1867,"length1":18,"length2":16},{"diffs":[[0,"ach "],[-1,"line, (square, square"],[1,"row, (column, column"],[0,"Idx)"]],"start1":1897,"start2":1897,"length1":29,"length2":28},{"diffs":[[0,"        "],[-1,"line[square"],[1,"row[column"],[0,"Idx] = @"]],"start1":1930,"start2":1930,"length1":27,"length2":26},{"diffs":[[0,"nes("],[-1,"line"],[1,"row"],[0,"Idx, "],[-1,"square"],[1,"column"],[0,"Idx) if "],[-1,"line"],[1,"row"],[0,"[squ"]],"start1":1963,"start2":1963,"length1":35,"length2":33},{"diffs":[[0,"s: ("],[-1,"line"],[1,"row"],[0,"Idx, "],[-1,"square"],[1,"column"],[0,"Idx)"]],"start1":2062,"start2":2062,"length1":23,"length2":22},{"diffs":[[0,"r y in ["],[-1,"line"],[1,"row"],[0,"Idx - 1,"]],"start1":2109,"start2":2109,"length1":20,"length2":19},{"diffs":[[0," 1, "],[-1,"line"],[1,"row"],[0,"Idx, "],[-1,"line"],[1,"row"],[0,"Idx "]],"start1":2125,"start2":2125,"length1":21,"length2":19},{"diffs":[[0,"r x in ["],[-1,"square"],[1,"column"],[0,"Idx - 1,"]],"start1":2157,"start2":2157,"length1":22,"length2":22},{"diffs":[[0," 1, "],[-1,"squareIdx, square"],[1,"columnIdx, column"],[0,"Idx "]],"start1":2176,"start2":2176,"length1":25,"length2":25}]],"length":2256,"saved":false}
{"ts":1362484931841,"patch":[[{"diffs":[[0,"row["],[-1,"square"],[1,"column"],[0,"Idx]"]],"start1":1989,"start2":1989,"length1":14,"length2":14}]],"length":2256,"saved":false}
{"ts":1362485064599,"patch":[[{"diffs":[[0,"s.input\n"],[1,"    @calc()\n"],[0,"  parse:"]],"start1":1684,"start2":1684,"length1":16,"length2":28},{"diffs":[[0," (input) ->\n"],[-1,""],[0,"    result ="]],"start1":1712,"start2":1712,"length1":24,"length2":24},{"diffs":[[0,"display: ->\n"],[1,"    @grid.join('\\n').replace(/\\,/g, '')\n  calc: ->\n"],[0,"    _.each @"]],"start1":1852,"start2":1852,"length1":24,"length2":75},{"diffs":[[0,"lumnIdx) =>\n"],[1,""],[0,"         row"]],"start1":1980,"start2":1980,"length1":24,"length2":24},{"diffs":[[0,"'*'\n"],[-1,"    @grid.join('\\n').replace(/\\,/g, '')\n"],[0,"  co"]],"start1":2070,"start2":2070,"length1":48,"length2":8}]],"length":2279,"saved":false}
{"ts":1362485150554,"patch":[[{"diffs":[[0,"ut\n    @"],[-1,"calc"],[1,"updateGrid"],[0,"()\n  par"]],"start1":1689,"start2":1689,"length1":20,"length2":26},{"diffs":[[0,")\n  "],[-1,"calc"],[1,"updateGrid"],[0,": ->"]],"start1":1908,"start2":1908,"length1":12,"length2":18}]],"length":2291,"saved":false}
{"ts":1362485163671,"patch":[[{"diffs":[[0,", '')\n  "],[-1,"updateGrid"],[1,"countAllMines"],[0,": ->\n   "]],"start1":1904,"start2":1904,"length1":26,"length2":29}]],"length":2294,"saved":false}
{"ts":1362485173051,"patch":[[{"diffs":[[0,"   @"],[-1,"updateGrid"],[1,"countAllMines"],[0,"()\n "]],"start1":1693,"start2":1693,"length1":18,"length2":21}]],"length":2297,"saved":false}
{"ts":1362485397947,"patch":[[{"diffs":[[0,"    for "],[-1,"y"],[1,"row"],[0," in [row"]],"start1":2144,"start2":2144,"length1":17,"length2":19},{"diffs":[[0,"    for "],[-1,"x"],[1,"column"],[0," in [col"]],"start1":2194,"start2":2194,"length1":17,"length2":22},{"diffs":[[0,"rid["],[-1,"y]?[x"],[1,"row]?[column"],[0,"] is"]],"start1":2276,"start2":2276,"length1":13,"length2":20}]],"length":2311,"saved":false}
{"ts":1362485526121,"patch":[[{"diffs":[[0,"qual ''\n"],[1,"    it 'should display \"Field #1\\n0\" when input is \"\"', ->\n      mineSweeper.input(\"\");\n"],[0,"\n\n# CODE"]],"start1":1551,"start2":1551,"length1":16,"length2":104}]],"length":2399,"saved":false}
{"ts":1362485545834,"patch":[[{"diffs":[[0,"put is \""],[1,"1 1\\n.\\n0 0"],[0,"\"', ->\n "]],"start1":1603,"start2":1603,"length1":16,"length2":27}]],"length":2410,"saved":false}
{"contributors":[],"silentsave":false,"ts":1362485588755,"patch":[[{"diffs":[[0,"nput"],[-1,"("],[1," "],[0,"'0 0'"],[-1,");"],[0,"\n   "]],"start1":1502,"start2":1502,"length1":16,"length2":14},{"diffs":[[0,"nput"],[-1,"(\"\");"],[1," \"1 1\\n.\\n0 0\" \n      expect(mineSweeper.run()).to.equal \"Field #1\\n0\""],[0,"\n\n\n#"]],"start1":1646,"start2":1646,"length1":13,"length2":78}]],"length":2473,"saved":false}
{"contributors":[],"silentsave":false,"ts":1362485594695,"patch":[[{"diffs":[[0,"nput"],[-1," "],[1,"("],[0,"'0 0'"],[1,");"],[0,"\n   "]],"start1":1502,"start2":1502,"length1":14,"length2":16},{"diffs":[[0," ''\n"],[-1,"    it 'should display \"Field #1\\n0\" when input is \"1 1\\n.\\n0 0\"', ->\n      mineSweeper.input \"1 1\\n.\\n0 0\" \n      expect(mineSweeper.run()).to.equal \"Field #1\\n0\"\n"],[0,"\n\n# "]],"start1":1555,"start2":1555,"length1":172,"length2":8},{"diffs":[[0,"put\n"],[-1,"    @countAllMines()\n"],[0,"  pa"]],"start1":1688,"start2":1688,"length1":29,"length2":8},{"diffs":[[0,"'\\n'), ("],[-1,"row"],[1,"line"],[0,") ->\n   "]],"start1":1760,"start2":1760,"length1":19,"length2":20},{"diffs":[[0,"lt.push "],[-1,"row"],[1,"line"],[0,".replace"]],"start1":1787,"start2":1787,"length1":19,"length2":20},{"diffs":[[0,"plit ''\n    "],[1,"  "],[0,"result\n  dis"]],"start1":1821,"start2":1821,"length1":24,"length2":26},{"diffs":[[0,"t\n  "],[-1,"display: ->\n    @grid.join('\\n').replace(/\\,/g, '')\n  countAllMines: ->\n"],[1,"  _.each @grid, (line, lineIdx) =>\n  "],[0,"    "],[1," "],[0,"_.each "],[-1,"@grid, (row, rowIdx) =>\n       _.each row, (column, columnIdx) =>"],[1,"line, (square, squareIdx) =>\n         return if line[squareIdx] == '*'"],[0,"\n   "]],"start1":1840,"start2":1840,"length1":156,"length2":127},{"diffs":[[0,"        "],[-1,"row[column"],[1,"line[square"],[0,"Idx] = @"]],"start1":1965,"start2":1965,"length1":26,"length2":27},{"diffs":[[0,"ines"],[-1,"(rowIdx, columnIdx) if row[columnIdx] != '*'"],[1," lineIdx, squareIdx\n  display: ->\n    @grid.join('\\n').replace(/\\,/g, '')"],[0,"\n  c"]],"start1":1998,"start2":1998,"length1":52,"length2":81},{"diffs":[[0,"s: ("],[-1,"row"],[1,"line"],[0,"Idx, "],[-1,"column"],[1,"square"],[0,"Idx)"]],"start1":2087,"start2":2087,"length1":22,"length2":23},{"diffs":[[0,"for "],[-1,"row"],[1,"y"],[0," in ["],[-1,"row"],[1,"line"],[0,"Idx "]],"start1":2133,"start2":2133,"length1":19,"length2":18},{"diffs":[[0," 1, "],[-1,"row"],[1,"line"],[0,"Idx, "],[-1,"row"],[1,"line"],[0,"Idx "]],"start1":2152,"start2":2152,"length1":19,"length2":21},{"diffs":[[0,"for "],[-1,"column in [columnIdx - 1, columnIdx, column"],[1,"x in [squareIdx - 1, squareIdx, square"],[0,"Idx "]],"start1":2184,"start2":2184,"length1":51,"length2":46},{"diffs":[[0,"rid["],[-1,"row]?[column"],[1,"y]?[x"],[0,"] is"]],"start1":2257,"start2":2257,"length1":20,"length2":13}]],"length":2285,"saved":false}
{"ts":1362485609593,"patch":[[{"diffs":[[0," result\n"],[1,"      \n"],[0,"    _.ea"]],"start1":1834,"start2":1834,"length1":16,"length2":23}]],"length":2292,"saved":false}
{"ts":1362485616993,"patch":[[{"diffs":[[0,"ld #1\\n0"],[1,"\\n"],[0,"\"\n\n\n# CO"]],"start1":1711,"start2":1711,"length1":16,"length2":18}]],"length":2475,"saved":false}
{"ts":1362485619731,"patch":[[{"diffs":[[0,"ld #1\\n0"],[1,"\\n"],[0,"\" when i"]],"start1":1584,"start2":1584,"length1":16,"length2":18}]],"length":2477,"saved":false}
{"ts":1362485629905,"patch":[[{"diffs":[[0,"esult\n  "],[-1,"    "],[1,"display: ->"],[0,"\n    _.e"]],"start1":1836,"start2":1836,"length1":20,"length2":27},{"diffs":[[0,"uareIdx\n"],[-1,"  display: ->\n"],[0,"    @gri"]],"start1":2028,"start2":2028,"length1":30,"length2":16}]],"length":2285,"saved":false}
{"ts":1362485851784,"patch":[[{"diffs":[[0,"input: \""],[-1,".*\\n."],[1,"**\\n..\",  output: \"**\\n22\"}\n      {input: \"..\\n*"],[0,".\",  out"]],"start1":553,"start2":553,"length1":21,"length2":64},{"diffs":[[0,"t: \""],[-1,"**\\n..\",  output: \"**\\n22\"}\n      {input: \"..\\n*"],[1,".*\\n."],[0,"*\", "]],"start1":736,"start2":736,"length1":56,"length2":13},{"diffs":[[0,"*\\n*2\"}\n"],[-1,"      \n"],[0,"      {i"]],"start1":932,"start2":932,"length1":23,"length2":16},{"diffs":[[0,"10\"}"],[-1,"\n      {input: \"**...\\n.....\\n.*...\",    output: \"**100\\n33200\\n1*100\"}"],[0,"\n\n  "]],"start1":1009,"start2":1009,"length1":79,"length2":8},{"diffs":[[0,"s.input\n"],[1,"    @calc()\n"],[0,"  parse:"]],"start1":1606,"start2":1606,"length1":16,"length2":28},{"diffs":[[0,"'\\n'), ("],[-1,"line"],[1,"row"],[0,") ->\n   "]],"start1":1694,"start2":1694,"length1":20,"length2":19},{"diffs":[[0,"lt.push "],[-1,"line"],[1,"row"],[0,".replace"]],"start1":1720,"start2":1720,"length1":20,"length2":19},{"diffs":[[0,"plit ''\n    "],[-1,"  "],[0,"result\n  dis"]],"start1":1753,"start2":1753,"length1":26,"length2":24},{"diffs":[[0,"    "],[-1,"_.each @grid, (line, lineIdx) =>\n       _.each line, (square, squareIdx) =>\n         return if line[squareIdx] == '*'\n         line[squareIdx] = @countMines lineIdx, squareIdx\n    @grid.join('\\n').replace(/\\,/g, '')\n  countMines: (lineIdx, squareIdx) ->\n    result = 0\n"],[1,"@grid.join('\\n').replace(/\\,/g, '')\n  calc: ->\n    _.each @grid, (row, rowIdx) =>\n  _.each row, (column, columnIdx) =>\n          row[columnIdx][squareIdx]++ if @grid[lineIdx + 1]?[squar= @countMines(rowIdx, columnIdx) if row[columnIdx] != '*'\n  countMines: (rowIdx, columnIdx) ->\n    result = 0\n    for y in [rowIdx - 1, rowIdx, rowIdx - 1]ult++ if @grid[lineIdx - 1]?[squareIdx + 1]\n    result\n  display: ->\n    _.each @grid      line[squareIdx]++ if lines[lineIdx + 1]?[squareIdx = @countMines lineIdx, + 1]\n    result++ if @grid[y]?[x] is '*'\n    result  for x in [columnIdx - 1, columnIdx, columnIdountMines: (lineIdx, squareIdx) ->\n    result = 0 - 1] is '*'\n        line[squareIdx]++ if lines[lineIdx - 1]?[squareIdx - 1] is '*'\n        \n        \n    "],[0,"    "]],"start1":1786,"start2":1786,"length1":277,"length2":765},{"diffs":[[0," 1]\n        "],[-1,"result"],[1,"#  line[squareIdx]"],[0,"++ if @grid["]],"start1":2649,"start2":2649,"length1":30,"length2":42},{"diffs":[[0,"rid[y]?[x] is '*'\n    re"],[-1,"sult"],[1,"turn @grid.join('\\n').replace(/\\,/g, '')"]],"start1":2687,"start2":2687,"length1":28,"length2":64}]],"length":2751,"saved":false}
{"ts":1362486062399,"patch":[[{"diffs":[[0,"Idx) =>\n"],[1,"      "],[0,"  _.each"]],"start1":1864,"start2":1864,"length1":16,"length2":22}]],"length":2757,"saved":false}
{"ts":1362486069684,"patch":[[{"diffs":[[0,"areIdx + 1]\n"],[1,"    "],[0,"    result\n "]],"start1":2168,"start2":2168,"length1":24,"length2":28}]],"length":2761,"saved":false}
{"ts":1362486072773,"patch":[[{"diffs":[[0,"areIdx + 1]\n"],[-1,"    "],[0,"    result\n "]],"start1":2168,"start2":2168,"length1":28,"length2":24}]],"length":2757,"saved":false}
{"contributors":[],"silentsave":false,"ts":1362489058797,"patch":[[{"diffs":[[0,"hould en"],[-1,"\\n"],[0,"d when i"]],"start1":1367,"start2":1367,"length1":18,"length2":16},{"diffs":[[0,">\n      "],[-1,"  "],[0,"_.each r"]],"start1":1870,"start2":1870,"length1":18,"length2":16},{"diffs":[[0,"lumnIdx) =>\n"],[-1,"  "],[0,"        row["]],"start1":1901,"start2":1901,"length1":26,"length2":24}]],"length":2753,"saved":false}
{"ts":1362489095288,"patch":[[{"diffs":[[0,"Idx) =>\n"],[-1,"    "],[0,"  _.each"]],"start1":1864,"start2":1864,"length1":20,"length2":16},{"diffs":[[0,"Idx) =>\n"],[1,"  "],[0,"        "]],"start1":1901,"start2":1901,"length1":16,"length2":18}]],"length":2751,"saved":false}
{"ts":1362489112247,"patch":[[{"diffs":[[0,"  \n        \n"],[-1,"    "],[0,"    for y in"]],"start1":2531,"start2":2531,"length1":28,"length2":24}]],"length":2747,"saved":false}
{"ts":1362489180365,"patch":[[{"diffs":[[0,"put\n"],[-1,"    @calc()\n"],[0,"  pa"]],"start1":1610,"start2":1610,"length1":20,"length2":8},{"diffs":[[0,"'\\n'), ("],[-1,"row"],[1,"line"],[0,") ->\n   "]],"start1":1682,"start2":1682,"length1":19,"length2":20},{"diffs":[[0,"lt.push "],[-1,"row"],[1,"line"],[0,".replace"]],"start1":1709,"start2":1709,"length1":19,"length2":20},{"diffs":[[0,"plit ''\n    "],[1,"  "],[0,"result\n  dis"]],"start1":1743,"start2":1743,"length1":24,"length2":26},{"diffs":[[0,"    "],[-1,"@grid.join('\\n').replace(/\\,/g, '')\n  calc: -"],[1,"_.each @grid, (line, lineIdx) ="],[0,">\n  "],[-1,"  "],[0,"_.each "],[-1,"@grid, (row, rowIdx) =>\n  _.each row, (column, columnIdx) =>"],[1,"line, (square, squareIdx) =>\n        return if line[squareIdx] == '*'"],[0,"\n   "]],"start1":1778,"start2":1778,"length1":126,"length2":119},{"diffs":[[0,"        "],[-1,"row[column"],[1,"# line[square"],[0,"Idx][squ"]],"start1":1896,"start2":1896,"length1":26,"length2":29},{"diffs":[[0,"quar"],[-1,"= @countMines(rowIdx, columnIdx) if row[columnIdx] != '*'\n  countMines: (rowIdx, columnIdx) ->\n    result = 0\n    for y in [rowIdx - 1, rowIdx, rowIdx - 1]"],[1,"eIdx - 1] is '*'\n        res"],[0,"ult+"]],"start1":1959,"start2":1959,"length1":163,"length2":36},{"diffs":[[0,"?[squareIdx "],[-1,"+"],[1,"-"],[0," 1]"],[1," is '*'"],[0,"\n    result\n"]],"start1":2018,"start2":2018,"length1":28,"length2":35},{"diffs":[[0,"    "],[-1,"result++ if @grid[y]?[x] is '*'\n    result  for x in [columnIdx - 1, columnIdx, columnId"],[1,"  for x in [squareIdx - 1, squareIdx, squareId\n  countMines: (lineIdx, squareIdx) ->\n    result++ if @grid[y]?[x] is '*'\n    resultresult = = @countMines lineIdx, squareIdx\n    @grid.join('\\n').replace(/\\,/g, '')\n  c"],[0,"ount"]],"start1":2168,"start2":2168,"length1":96,"length2":224},{"diffs":[[0,"sult = 0"],[-1," - 1] is '*'\n        "],[1,"\n    for y in [lineIdx - 1, lineIdx, lin0 -"],[0,"line[squ"]],"start1":2429,"start2":2429,"length1":37,"length2":59},{"diffs":[[0,"?[squareIdx "],[-1,"-"],[1,"+"],[0," 1]"],[-1," is '*'"],[0,"\n        \n  "]],"start1":2519,"start2":2519,"length1":35,"length2":28},{"diffs":[[0,"  \n        \n"],[1,"    "],[0,"    for y in"]],"start1":2542,"start2":2542,"length1":24,"length2":28}]],"length":2762,"saved":false}
{"ts":1362489205208,"patch":[[{"diffs":[[0,"Idx,"],[-1," lin0 -line[squareIdx]++ if lines[lineIdx - 1]?[squareIdx + 1]\n        \n        \n        for y in [lineIdx - 1, lineIdx,"],[0," lin"]],"start1":2469,"start2":2469,"length1":128,"length2":8}]],"length":2642,"saved":false}
{"contributors":[],"silentsave":true,"restoring":1362482877700,"ts":1362489280308,"patch":[[{"diffs":[[0,"\"}\n\n    "],[-1,""],[1,"  {input: \"*.\\n..\\n.*\",  output: \"*1\\n22\\n1*\"}\n      \n      {input: \"*...\\n....\\n.*..\\n....\", output: \"*100\\n2210\\n1*10\\n1110\"}\n      {input: \"**...\\n.....\\n.*...\",    output: \"**100\\n33200\\n1*100\"}\n      {input: \"**...\\n.....\\n.*...\", output: \"**100\\n33200\\n1*100\"}\n    "],[0,"]\n\n    _"]],"start1":1011,"start2":1011,"length1":16,"length2":287},{"diffs":[[0,"ons) ->\n    "],[1,"  "],[0,"@grid = @par"]],"start1":1843,"start2":1843,"length1":24,"length2":26},{"diffs":[[0," (input) ->\n    "],[1,"  "],[0,"result = []\n    "]],"start1":1895,"start2":1895,"length1":32,"length2":34},{"diffs":[[0,"lt = []\n    "],[1,"  "],[0,"_.each @opti"]],"start1":1917,"start2":1917,"length1":24,"length2":26},{"diffs":[[0,", (line) ->\n"],[1,"  "],[0,"      result"]],"start1":1964,"start2":1964,"length1":24,"length2":26},{"diffs":[[0,"Idx) =>\n"],[1,"    "],[0,"  _.each"]],"start1":2086,"start2":2086,"length1":16,"length2":20},{"diffs":[[0,"'*'\n"],[1,"\n"],[0,"        "],[-1,"  # "],[0,"line"]],"start1":2173,"start2":2173,"length1":20,"length2":17},{"diffs":[[0,"uareIdx]"],[1,"++ if line[squareIdx - 1] is '*'\n        line[squareIdx]++ if line[squareIdx + 1] is '*'\n\n        line"],[0,"[squareI"]],"start1":2193,"start2":2193,"length1":16,"length2":118},{"diffs":[[0," + 1]?[squareIdx"],[-1," - 1"],[0,"] is '*'\n       "]],"start1":2333,"start2":2333,"length1":36,"length2":32},{"diffs":[[0,"'*'\n        "],[-1,"result"],[1,"line[squareIdx]"],[0,"++ if @grid["]],"start1":2354,"start2":2354,"length1":30,"length2":39},{"diffs":[[0," - 1]?[squareIdx"],[-1," - 1"],[0,"] is '*'\n    res"]],"start1":2400,"start2":2400,"length1":36,"length2":32},{"diffs":[[0,"'*'\n"],[1,"\n  "],[0,"    "],[-1,"result\n  display: ->\n    _.each @grid"],[1,"  line[squareIdx]++ if @grid[lineIdx + 1]?[squareIdx + 1] is '*'\n  "],[0,"    "]],"start1":2421,"start2":2421,"length1":49,"length2":82},{"diffs":[[0," if "],[-1,"lines"],[1,"@grid"],[0,"[lin"]],"start1":2522,"start2":2522,"length1":13,"length2":13},{"diffs":[[0,"f @grid[lineIdx "],[-1,"+"],[1,"-"],[0," 1]?[squareIdx ="]],"start1":2524,"start2":2524,"length1":33,"length2":33},{"diffs":[[0,"uareIdx "],[-1,"= @countMines "],[1,"+ 1] is '*'\n        \n        # for y in [lineIdx - 1.."],[0,"lineIdx"],[-1,","],[0," + 1]\n  "]],"start1":2548,"start2":2548,"length1":38,"length2":77},{"diffs":[[0,"eIdx + 1]\n      "],[1,"  #    "],[0,"for x in [square"]],"start1":2613,"start2":2613,"length1":32,"length2":39},{"diffs":[[0,"n [squareIdx - 1"],[-1,", "],[1,".."],[0,"squareIdx, squar"]],"start1":2643,"start2":2643,"length1":34,"length2":34},{"diffs":[[0,"eIdx"],[-1,", squareId\n  countMines: (lineIdx, squareIdx) ->\n    result"],[1," + 1]\n        #        line[squareIdx]"],[0,"++ i"]],"start1":2666,"start2":2666,"length1":67,"length2":46},{"diffs":[[0,"Idx]++ if @grid["],[-1,"y]?[x"],[1,"x]?[y"],[0,"] is '*'\n    res"]],"start1":2704,"start2":2704,"length1":37,"length2":37},{"diffs":[[0,"    "],[-1,"resultresult = = @countMines lineIdx, squareIdx\n    @grid.join('\\n').replace(/\\,/g, '')\n  countMines: (lineIdx, "],[1,"    line[squareIdx]++ if @grid[lineIdx + 1]?["],[0,"squa"]],"start1":2734,"start2":2734,"length1":120,"length2":53},{"diffs":[[0,"eIdx"],[-1,")"],[0," -"],[-1,">\n    result = 0\n    for y in [lineIdx - 1, lineIdx, lin"],[1," 1] is '*'\n        line[squareIdx]++ if @grid[lineIdx - 1]?[squar"],[0,"eIdx "],[-1,"+ 1]\n      for x in "],[1,"- 1] is '*'\n        \n        line"],[0,"[squ"]],"start1":2788,"start2":2788,"length1":92,"length2":113},{"diffs":[[0,"eIdx"],[-1," - 1, squareIdx, "],[1,"]++ if lines[lineIdx + 1]?["],[0,"squa"]],"start1":2903,"start2":2903,"length1":25,"length2":35},{"diffs":[[0,"uareIdx "],[-1,"+"],[1,"-"],[0," 1]"],[-1,"\n"],[0," "],[1,"is '*'\n"],[0,"      "],[-1," #"],[0,"  line[s"]],"start1":2936,"start2":2936,"length1":30,"length2":34},{"diffs":[[0," if "],[-1,"@grid[y]?[x] is '*'"],[1,"lines[lineIdx - 1]?[squareIdx - 1] is '*'\n        "],[0,"\n   "]],"start1":2981,"start2":2981,"length1":27,"length2":58}]],"length":3082,"saved":false}
{"ts":1362489338550,"patch":[[{"diffs":[[0,"'*'\n"],[-1,"        line[squareIdx]++ if @grid[lineIdx + 1]?[squareIdx - 1] is '*'\n        line[squareIdx]++ if @grid[lineIdx - 1]?[squareIdx - 1] is '*'\n        \n        line[squareIdx]++ if lines[lineIdx + 1]?[squareIdx - 1] is '*'\n        line[squareIdx]++ if lines[lineIdx - 1]?[squareIdx - 1] is '*'\n"],[0,"    "]],"start1":2730,"start2":2730,"length1":301,"length2":8}]],"length":2789,"saved":false}
{"ts":1362489460176,"patch":[[{"diffs":[[0,"'*'\n"],[-1,"\n"],[0,"        "],[-1,"line[squareIdx]++ if line[squareIdx - 1] is '*'\n        line[squareIdx]++ if line[squar"],[1,"for y in [lin"],[0,"eIdx "],[-1,"+ 1] is '*'\n\n        line[squareIdx]++ if @grid[lineIdx + 1]?[squareIdx] is '*'\n        line[squareIdx]++ if @grid[lineIdx - 1]?[squareIdx] is '*'\n\n        line[squareIdx]++ if @grid[lineIdx + 1]?[squareIdx + 1] is '*'\n        line[squareIdx]++ if @grid[lineIdx - 1]?[squareIdx + 1] is '*'\n        \n        # for y in [lineIdx - 1..lineIdx + 1]\n        #    for x in ["],[1,"- 1, lineIdx, lineIdx + 1]\n          for x in [squareIdx - 1, "],[0,"squa"]],"start1":2173,"start2":2173,"length1":477,"length2":96},{"diffs":[[0,"eIdx"],[1,","],[0," "],[-1,"- 1.."],[0,"squa"]],"start1":2270,"start2":2270,"length1":14,"length2":10},{"diffs":[[0,"    "],[-1,"    #"],[0,"    "]],"start1":2291,"start2":2291,"length1":13,"length2":8},{"diffs":[[0,"rid["],[-1,"x]?[y"],[1,"y]?[x"],[0,"] is"]],"start1":2326,"start2":2326,"length1":13,"length2":13}]],"length":2399,"saved":false}
{"ts":1362489477399,"patch":[[{"diffs":[[0,"rid["],[-1,"y]?[x"],[1,"x]?[y"],[0,"] is"]],"start1":2326,"start2":2326,"length1":13,"length2":13}]],"length":2399,"saved":false}
{"ts":1362489490891,"patch":[[{"diffs":[[0,"rid["],[-1,"x]?[y"],[1,"y]?[x"],[0,"] is"]],"start1":2326,"start2":2326,"length1":13,"length2":13}]],"length":2399,"saved":false}
{"ts":1362489551797,"patch":[[{"diffs":[[0,"Idx] == '*'\n"],[1,"        \n"],[0,"        for "]],"start1":2165,"start2":2165,"length1":24,"length2":33}]],"length":2408,"saved":false}
{"contributors":["marty.kelly2009@gmail.com"],"silentsave":false,"ts":1362489965054,"patch":[[{"diffs":[[0,"'\\n'), ("],[-1,"line"],[1,"row"],[0,") ->\n   "]],"start1":1959,"start2":1959,"length1":20,"length2":19},{"diffs":[[0,"lt.push "],[-1,"line"],[1,"row"],[0,".replace"]],"start1":1987,"start2":1987,"length1":20,"length2":19},{"diffs":[[0,"d, ("],[-1,"line, line"],[1,"row, row"],[0,"Idx)"]],"start1":2070,"start2":2070,"length1":18,"length2":16},{"diffs":[[0,"e, ("],[-1,"square, square"],[1,"column, column"],[0,"Idx)"]],"start1":2106,"start2":2106,"length1":22,"length2":22},{"diffs":[[0,"turn if "],[-1,"line[square"],[1,"row[column"],[0,"Idx] == "]],"start1":2142,"start2":2142,"length1":27,"length2":26},{"diffs":[[0,"r y in ["],[-1,"line"],[1,"row"],[0,"Idx - 1,"]],"start1":2191,"start2":2191,"length1":20,"length2":19},{"diffs":[[0," 1, "],[-1,"line"],[1,"row"],[0,"Idx, "],[-1,"line"],[1,"row"],[0,"Idx "]],"start1":2207,"start2":2207,"length1":21,"length2":19},{"diffs":[[0,"r x in ["],[-1,"square"],[1,"colum"],[0,"Idx - 1,"]],"start1":2243,"start2":2243,"length1":22,"length2":21},{"diffs":[[0," 1, "],[-1,"squareIdx, square"],[1,"columIdx, colum"],[0,"Idx "]],"start1":2261,"start2":2261,"length1":25,"length2":23},{"diffs":[[0,"    "],[-1,"line[square"],[1,"row[colum"],[0,"Idx]"]],"start1":2297,"start2":2297,"length1":19,"length2":17}]],"length":2395,"saved":false}
{"ts":1362489973153,"patch":[[{"diffs":[[0," x in [colum"],[1,"n"],[0,"Idx - 1, col"]],"start1":2244,"start2":2244,"length1":24,"length2":25},{"diffs":[[0,"1, colum"],[1,"n"],[0,"Idx, col"]],"start1":2263,"start2":2263,"length1":16,"length2":17},{"diffs":[[0,"x, colum"],[1,"n"],[0,"Idx + 1]"]],"start1":2274,"start2":2274,"length1":16,"length2":17},{"diffs":[[0,"ow[colum"],[1,"n"],[0,"Idx]++ i"]],"start1":2305,"start2":2305,"length1":16,"length2":17}]],"length":2399,"saved":false}
{"ts":1362490070353,"patch":[[{"diffs":[[0,"ach "],[-1,"line"],[1,"row"],[0,", (c"]],"start1":2099,"start2":2099,"length1":12,"length2":11}]],"length":2398,"saved":false}
{"ts":1362490203343,"patch":[[{"diffs":[[0,"tput: \"2"],[-1,"2\\n*"],[1,"*\\n2"],[0,"*\"}\n    "]],"start1":752,"start2":752,"length1":20,"length2":20}]],"length":2398,"saved":false}
{"ts":1362490282758,"patch":[[{"diffs":[[0,"tput: \"1"],[-1,"*\\n1"],[1,"1\\n*"],[0,"1\"}\n    "]],"start1":616,"start2":616,"length1":20,"length2":20}]],"length":2398,"saved":false}
{"ts":1362490302491,"patch":[[{"diffs":[[0,"  {input: \"..\\n*"],[-1,"."],[1,"*"],[0,"\",  output: \"11\\"]],"start1":636,"start2":636,"length1":33,"length2":33},{"diffs":[[0,"n**\",  output: \""],[-1,"11\\n*1"],[1,"22\\n**"],[0,"\"}\n      {input:"]],"start1":650,"start2":650,"length1":38,"length2":38}]],"length":2398,"saved":false}
